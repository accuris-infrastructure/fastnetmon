version: 2.1
parameters:
  fastnetmon_build_version:
    type: string
    default: "1.2.5"
orbs:
  win: circleci/windows@4.1
jobs:
  build_docker_x86_64:
    machine:
      image: ubuntu-2204:current
    steps:
     - checkout
     - run: docker build -t ghcr.io/accuris-infrastructure/fastnetmon-community:1.2.5 -t ghcr.io/accuris-infrastructure/fastnetmon-community:latest - < src/Dockerfile
     - run: sudo docker images
     - run: echo $CR_PAT | sudo docker login ghcr.io -u accuris-infrastructure --password-stdin
     - run: sudo docker push ghcr.io/accuris-infrastructure/fastnetmon-community:1.2.5
     - run: sudo docker push ghcr.io/accuris-infrastructure/fastnetmon-community:latest
  build_debian_system_dependencies:
    parameters:
      docker_image:
        type: string
      resource_class:
        type: string
        default: xlarge
    machine:
      image: ubuntu-2204:current
    environment:
      DEBIAN_FRONTEND: noninteractive
    resource_class: << parameters.resource_class >>
    steps:
      - run: sudo docker run --name  linux_docker -d -t << parameters.docker_image >>
      - run: sudo docker exec linux_docker apt-get update; true
      - run: sudo docker exec --env DEBIAN_FRONTEND linux_docker apt-get install -y perl wget git cmake g++ make liblog4cpp5-dev libhiredis-dev libmongoc-dev libbpf-dev libgrpc++-dev libprotobuf-dev protobuf-compiler libcapnp-dev capnproto libssl-dev protobuf-compiler-grpc libncurses5-dev libpcap-dev pkg-config  libboost-atomic-dev libboost-chrono-dev  libboost-date-time-dev libboost-program-options-dev libboost-regex-dev libboost-system-dev libboost-thread-dev
      - run: sudo docker exec linux_docker git clone https://github.com/accuris-infrastructure/fastnetmon.git
      - run: sudo docker exec linux_docker mkdir fastnetmon/src/build
      - run: sudo docker exec linux_docker cmake -S fastnetmon/src -B fastnetmon/src/build -DENABLE_AF_XDP_SUPPORT=FALSE
      - run: sudo docker exec linux_docker make -C fastnetmon/src/build -j
  build_debian:
    parameters:
      docker_image:
        type: string
      distro_version:
        type: string
      distro_name: 
        type: string
      s3cmd_install_command:
        type: string
        default: "apt-get install -y s3cmd"
      resource_class:
        type: string
        default: xlarge
      debian_package_architecture:
        type: string
        default: "amd64"
    machine:
      image: ubuntu-2204:current
    environment:
      DEBIAN_FRONTEND: noninteractive
    resource_class: << parameters.resource_class >>
    steps:
      - run: sudo docker run --name  linux_docker -d -t << parameters.docker_image >>
      - run: sudo docker exec linux_docker apt-get update; true
      - run: sudo docker exec linux_docker apt-get install -y perl wget git
      - run: sudo docker exec --env DEBIAN_FRONTEND linux_docker bash -c "<< parameters.s3cmd_install_command >>"
      - run: sudo docker exec linux_docker git clone https://github.com/accuris-infrastructure/fastnetmon.git
      - run:
          name: install_gcc
          no_output_timeout: 120m 
          command: sudo -E docker exec --env AWS_ACCESS_KEY_ID --env AWS_SECRET_ACCESS_KEY linux_docker perl fastnetmon/src/scripts/install_fastnetmon_dependencies.pl gcc_12_1_0
      - run:
          name: install_dependencies
          no_output_timeout: 180m
          command: sudo -E docker exec --env AWS_ACCESS_KEY_ID --env AWS_SECRET_ACCESS_KEY linux_docker perl fastnetmon/src/scripts/install_fastnetmon_dependencies.pl
      - run: sudo docker exec linux_docker perl fastnetmon/src/scripts/fastnetmon_build.pl
      - run: sudo docker exec linux_docker perl fastnetmon/src/scripts/build_library_bundle.pl /opt/fastnetmon_libraries_bundle.tar.gz
      - run: sudo docker exec linux_docker fastnetmon/src/scripts/build_any_package.pl deb /opt/fastnetmon_libraries_bundle.tar.gz << pipeline.parameters.fastnetmon_build_version >> << parameters.distro_name >> << parameters.distro_version >>
      - run: sudo -E docker exec --env AWS_ACCESS_KEY_ID --env AWS_SECRET_ACCESS_KEY linux_docker s3cmd --disable-multipart  --host=storage.googleapis.com --host-bucket="%(bucket).storage.googleapis.com" put /tmp/fastnetmon_<< pipeline.parameters.fastnetmon_build_version >>_<< parameters.debian_package_architecture >>.deb s3://fastnetmon_community_packages/<< pipeline.parameters.fastnetmon_build_version >>/<< parameters.distro_name >>/<< parameters.distro_version >>/fastnetmon_<< pipeline.parameters.fastnetmon_build_version >>_<< parameters.debian_package_architecture >>.deb
      - run: sudo docker exec linux_docker cp fastnetmon/src/fastnetmon.conf /etc/fastnetmon.conf
      - run: sudo docker exec linux_docker ldd /opt/fastnetmon-community/app/bin/fastnetmon
      - run: sudo docker exec linux_docker ldd /opt/fastnetmon-community/app/bin/fastnetmon_client
      - run: sudo docker exec linux_docker ldd /opt/fastnetmon-community/app/bin/fastnetmon_api_client
      - run: sudo docker exec linux_docker /opt/fastnetmon-community/app/bin/fastnetmon_api_client --help
      - run: sudo docker exec linux_docker /opt/fastnetmon-community/app/bin/fastnetmon_client --help
      - run: sudo docker exec linux_docker /opt/fastnetmon-community/app/bin/fastnetmon --configuration_check
workflows:
  version: 2
  all_distros:
    jobs:
      - build_debian:
          docker_image: "debian:bullseye"
          distro_version: "11"
          name: "debian11"
          distro_name: "debian"
      - build_debian:
          docker_image: "debian:bookworm"
          distro_version: "12"
          name: "debian12"
          distro_name: "debian"
      - build_docker_x86_64:
          name: "Build Docker image on x86_64 platform"
      # To offer great developer experience we ensure that FastNetMon can be built on latest Ubuntu LTS 
      - build_debian_system_dependencies:
          docker_image: "ubuntu:jammy"
          name: "ubuntu2204_system_dependencies"
